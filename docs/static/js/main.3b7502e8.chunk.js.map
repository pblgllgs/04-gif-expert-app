{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,QAK/C,SACI,uBACIC,KAAK,OACLC,YAAY,wBACZC,MAAOV,EACPW,SAjBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,8BCNlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACJ,mCADI,SAEAC,MAAM,gDAAD,OADT,mCACS,cACwCC,UAAUH,GADlD,aAEpB,CAAC,KAAQ,YAJM,cAEbI,EAFa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAZvB,kBAeZL,GAfY,4CAAH,sDAkBLR,ICPAgB,EAVY,SAAC,GAAmB,EAAlBL,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCiBDQ,EApBQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACtB,ECFwB,SAACA,GACzB,MAA0Bf,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAX,GACnBY,YAAW,WACPH,EAAS,CACLhB,KAAMO,EACNO,SAAS,MAEf,UAEP,CAACpB,IACGqB,EDbuBK,CAAa1B,GAA/Ba,EAAZ,EAAOP,KAAYc,EAAnB,EAAmBA,QACnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,uDAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOL,KAAI,SAACC,GACR,OAAO,wBAAC,EAAD,2BACCA,GADD,IAEHkB,IAAKlB,EAAIC,eEMtBkB,EAjBa,WACxB,MAAoC3C,mBAAS,CAAC,aAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACKS,EAAWe,KAAI,SAACR,GACb,OAAO,cAAC,EAAD,CAASA,SAAUA,GAAeA,YCR7D6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3b7502e8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputchange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue,...categories]);\r\n        }\r\n     };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Ingresa una categoria\"\r\n                value={inputValue}\r\n                onChange={handleInputchange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async (category) => {\r\n    const apiKey = \"Ftmx0ADU6kkfDNb7tRGbwbieRvlpdZc0\";\r\n    const resp = await fetch(\r\n        `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=10`,\r\n        {'mode': 'no-cors'}\r\n        );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React, {  } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash animate__slower\t3s'>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => {\r\n                        return <GifGridItem\r\n                            {...img}\r\n                            key={img.id}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifs(category).then(images => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: images,\r\n                    loading: false\r\n                })\r\n            },1000)\r\n        })\r\n    }, [category])\r\n    return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"Hunter X\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => {\r\n                    return <GifGrid category={category} key={category} />;\r\n                })}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}